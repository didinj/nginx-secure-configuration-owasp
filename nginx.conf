
#user  nobody;
user www-data;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    
    # Expires map
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   max;
        application/javascript     max;
        ~image/                    max;
    }

    #gzip  on;
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name dasarkoding.com;
        return 301 https://www.dasarkoding.com$request_uri;
    }

    server {
        #listen       80;
        #server_name  localhost;
        server_name dasarkoding.com www.dasarkoding.com;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        ssl_certificate /usr/local/nginx/ssl/bundle.crt;
        ssl_certificate_key /usr/local/nginx/ssl//private.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:AES256+EDH';
        #charset koi8-r;
	modsecurity on;
	proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=strict";
        expires $expires;
        #access_log  logs/host.access.log  main;

        location / {
	    modsecurity_rules_file /usr/local/nginx/conf/modsecurity.conf; 
            #root   /var/www/html;
            root /opt/tomcat/webapps/mynotes-0.0.1-SNAPSHOT;
            index  index.html index.htm;
            proxy_set_header        Host $host:$server_port;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            if ($request_uri ~ ^(/.*)(.*)$) {
                proxy_pass http://127.0.0.1:8080/$1;
                break;
            }
            add_header X-Served-By "Served by Dasarkoding";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            #add_header Content-Security-Policy "default-src 'self' s3-ap-southeast-1.amazonaws.com cse.go$
            #add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options nosniff;
            add_header Referrer-Policy same-origin;
            #add_header Feature-Policy "vibrate 'none';";
            proxy_pass http://127.0.0.1:8080/;
	    #set_cookie_flag HttpOnly secure;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
